{
  "root": true,
  "env": {
    // где будет исполняться наш код
    "browser": true,
    "es2021": true
  },
  /* Пресет с настройками. prettier должен быть последним. 
  Он удаляет некоторые правила eslint из-за которых могут возникать конфликты. */
  "extends": [
    "eslint:recommended",
    //"plugin:react/recommended",
    //"plugin:react-hooks/recommended",
    // "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "airbnb-base",
    //"airbnb/rules/react",
    //"airbnb/hooks",
    // "airbnb-base/legacy",
    "prettier"
  ],
  "parser": "@babel/eslint-parser", // Парсер для обработки jsx кода
  "parserOptions": {
    // "ecmaFeatures": {
    //   "jsx": true
    // },
    "ecmaVersion": 12, // версия стандарта JavaScript. Последний 12 (2021).
    "sourceType": "module" // Позволяет использовать import/export
  },
  // Здесь мы подключаем используемые плагины.
  "plugins": [
    // "react",
    "prettier"
  ],
  /* Правила для отслеживания линтером. Если пресеты покрывают не все ситуации, 
  вы можете прописать нужные правила вручную. */
  "rules": {
    "prettier/prettier": ["warn", { "endOfLine": "auto" }], // Обязательно!! Подсвечивает ошибки Prettier.
    //"react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    // "react/prop-types": 0, // Отключаем правило проверки передаваемых типов.
    "no-console": 0, // отключаем запрет на использование console.log
    "no-plusplus": 0, // отключаем диагностику декремента ++
    // "react/state-in-constructor": 0, // отключаем необходимость устанавливать state только в конструктере класса
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ], // требование пустой строки между методами, но не свойствами класса
    "prefer-template": 0, // отключаем обязательное использование бектиков для формирования строк
    "no-underscore-dangle": ["warn"], // оповещение о знаке нижнего подчеркивания
    // "react/no-access-state-in-setstate": ["warn"], // работа со state в классах
    "no-unused-vars": ["warn"], // предупреждение о неиспользуемых переменных
    "no-return-await": ["warn"], // предупреждение об await при retern'e из функции
    "linebreak-style": ["warn", "windows"] // форматирование конца строки под стандарт Windows (CRLF, \r\n)
  }
}
